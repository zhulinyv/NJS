﻿HOST=0.0.0.0
PORT=13579                              # 端口
LOG_LEVEL=INFO                          # 日志等级
SUPERUSERS=[""]                         # 超级用户 QQ 号
NICKNAME=["脑积水"]                     # 可以改成你自己喜欢的名字
COMMAND_START=["/", "。", "#", ""]      # 命令头，默认没有
COMMAND_SEP=[""]                        # 命令分隔符

########## 更多个性化配置请参照具体插件 https://zhulinyv.github.io/NJS ##########
# 注意：修改配置时应把前面的 “# ” 注释符删掉！
# 注意：本项目缝合了狠多插件但并不是全部必须使用！
# 注意：以下内容按需要设置，如果都不配置就按照插件自身的默认配置运行！
# 注意：有些内容是必填的，有些内容是选填的！

# 1.头像表情包制作(均为可选)
# petpet_command_start
# 类型：List[str]
# 默认：[""]
# 说明：命令起始标记，默认包含空字符串
# petpet_resource_url
# 类型：str
# 默认：https://ghproxy.com/https://raw.githubusercontent.com/noneplugin/nonebot-plugin-petpet/v0.3.x/resources
# 说明：资源下载链接，默认为使用ghproxy代理的github仓库链接
# petpet_disabled_list
# 类型：List[str]
# 默认：[]
# 说明：禁用的表情包列表，需填写表情名称的列表，表情名称可以在data_source.py文件中查看。若只是临时关闭，可以用下文中的“表情包开关”
# petpet_gif_max_size
# 类型：float
# 默认：10
# 说明：限制生成的gif的最大体积，单位为Mb。若生成的gif体积过大，则先会尝试缩减帧数，其次尝试缩小图片尺寸
# petpet_gif_max_frames
# 类型：int
# 默认：100
# 说明：限制生成的gif的最大帧数
# baidu_trans_appid
# 类型：str
# 默认：""
# 说明：百度翻译api相关，可在百度翻译开放平台申请
# baidu_trans_apikey
# 类型：str
# 默认：""
# 说明：百度翻译api相关，可在百度翻译开放平台申请(若使用，则此项必填)
# “典中典”表情需要设置 baidu_trans_appid 和 baidu_trans_apikey

# 2.二次元图片(均为可选)
# 配置项                     类型     默认值           示例                                    说明
# setu_disable_wlist	     # bool	 False	        setu_disable_wlist = True	            是否禁用白名单检查(极度不推荐禁用)(详见权限控制系统)
# setu_enable_private	     # bool	 False	        setu_enable_private = True	            是否允许未在白名单的私聊会话使用(详见权限控制系统)
# setu_perm_cfg_path	     # str	 see example	setu_perm_cfg_path = './data/setu4'	    会话(群号或QQ号)启用、r18及其他独立配置项
# setu_save	                 # str	 None	        setu_save = './data/setu4/img'	        setu保存到本地的路径, 留空则不保存至本地
# setu_regex	             # str	 see example    setu_save = see description1	        setu插件的正则表达式匹配
# setu_database_path	     # str	 see example	setu_database_path = see description2	更新使用的数据库的地址, 默认为此项目的resource文件夹下
# setu_cd*	                 # int	 20	            setu_cd = 30	                        setu默认cd[0,+∞], 为0时无cd
# setu_withdraw_time*	     # int	 100	        setu_withdraw_time = 30	                setu默认撤回时间[0,100], 为0时不撤回
# setu_max_num*	             # int	 10	            setu_max_num = 20	                    setu默认一次性最大数量[1,25]
# setu_proxy	             # str	 i.pixiv.re	    setu_proxy = "i.pixiv.re"	            下载图片的代理(一般我会把可用的代理设置成默认

# 6.AI绘图(使用第三方API)
# 配置项             必填？  默认值                                  说明
# AI_DRAW_API	    # 否	API	                                    第三方 API 的地址
# AI_DRAW_TOKEN	    # 必填	空	                                    第三方 API 的 token, 点击这里获取
# AI_DRAW_COOLDOWN	# 否	60	                                    使用后的冷却时间, 单位: 秒
# AI_DRAW_DAILY	    # 否	30	                                    每日使用次数, 单位: 次
# AI_DRAW_TIMEOUT	# 否	60	                                    请求 API 的超时时间, 单位: 秒
# AI_DRAW_REVOKE	# 否	0	                                    图片的撤回时间, 默认不撤回, 单位: 秒
# AI_DRAW_MESSAGE	# 否	mix	                                    消息发送方式：可选 mix(图文混合)、part(图文分离)、image(仅图片)
# AI_DRAW_RANK	    # 否	10	                                    标签统计排行的最大显示数量, 设置为0表示显示全部, 单位: 位
# AI_DRAW_DATA	    # 否	自身目录	插件保存数据文件夹的路径
# AI_DRAW_TEXT	    # 否	\n图像种子: {seed}\n提示标签: {tags}	  文本消息模板, 支持参数有:tags(标签), steps(迭代步数), seed(图像种子), strength(强度), scale(自由度), ntags(负面标签), 参数需以{}包裹
# AI_DRAW_DATABASE	# 否	True	                                是否使用数据库, 如果为 False, 则不启用数据库, 标签统计功能将无法使用

# 8.娶群友(均为可选)
# waifu_cd_bye = 3600 # 分手冷却时间，默认1小时。
# waifu_save = false # 是否将cp记录保存为文件（避免重启bot丢失数据）。
# waifu_he = 25 # 在指定娶群友时，成功的概率25%
# waifu_be = 25 # 在指定娶群友时，失败的概率25%
# ## 成功就是娶到了，失败就是单身。如果这两个参数加起来不等于100那么剩下的概率是会随机娶一个。
# waifu_ntr = 20 # 别人有cp时被指定娶到的概率
# yinpa_he = 50 # 在指定透群友时，成功的概率50%
# yinpa_be = 0 # 在指定透群友时，失败的概率0%
# ## 同上，如果这两个参数加起来不等于100那么剩下的概率是会随机透一个。

# 11.颜值评分(若使用则必填)
# face_api_key=""
# face_secret_key=""

# 12.今日运势(均为可选)
# 抽签主题图片img、字体font、文案fortune等资源均位于./resource下，可在env中设置FORTUNE_PATH；
# FORTUNE_PATH="your-path-to-resource"    # For example, "./my-data/fortune"，其下有img、font、fortune文件夹等资源
# 在env下设置xxx_FLAG以启用或关闭抽签随机主题（默认全部开启），例如：
# ARKNIGHTS_FLAG=true         # 明日方舟
# ASOUL_FLAG=true             # A-SOUL
# AZURE_FLAG=true             # 碧蓝航线
# GENSHIN_FLAG=true           # 原神
# ONMYOJI_FLAG=false          # 阴阳师
# PCR_FLAG=true               # 公主连结
# TOUHOU_FLAG=true            # 东方
# TOUHOU_LOSTWORD_FLAG=true   # 东方归言录
# TOUHOU_OLD_FLAG=false       # 东方旧版
# HOLOLIVE_FLAG=true          # Hololive
# PUNISHING_FLAG=true         # 战双帕弥什
# GRANBLUE_FANTASY_FLAG=true  # 碧蓝幻想
# PRETTY_DERBY_FLAG=true      # 赛马娘
# DC4_FLAG=false              # dc4
# EINSTEIN_FLAG=true          # 爱因斯坦携爱敬上
# SWEET_ILLUSION_FLAG=true    # 灵感满溢的甜蜜创想
# LIQINGGE_FLAG=true          # 李清歌
# HOSHIZORA_FLAG=true         # 星空列车与白的旅行
# SAKURA_FLAG=true            # 樱色之云绯色之恋
# SUMMER_POCKETS_FLAG=false   # 夏日口袋
# AMAZING_GRACE_FLAG=false    # 奇异恩典·圣夜的小镇

# 14.无聊趣味占卜(均为可选)
# 对于需要登录推特的占卜，可以在 .env.xxx 文件中添加 ShindanMaker cookie：
# shindanmaker_cookie=xxx
# cookie 获取方式：
# F12 打开开发工具，查看 shindanmaker.com 请求的响应头，找形如 _session=xxx; 的片段，如：
# shindanmaker_cookie="_session=xxx;"

# 15.日韩中 VITS 模型拟声(均为可选)
# 在插件初次联网成功运行后，可以发现 BOTROOT/data/moegoe/ 路径下有profile.toml文件，其中可以配置
# 插件优先级 priority
# 触发正则语句 regex
# 修改后保存，重启生效。
# 注意： 因使用人数过多，目前中文API设置了秘钥限制。在自行获取APIKey后，在配置文件的cnapi url末尾加上'&code=你的APIKey'，即可使用

# 16.塔罗牌(均为可选)
# 塔罗牌图片资源默认位于./resource下，设置env下TAROT_PATH更改资源路径，CHAIN_REPLY设置全局启用群聊转发模式，可通过命令修改：
# TAROT_PATH="./data/path-to-your-resource"
# CHAIN_REPLY=false

# 20.疫情小助手(均为可选)
# covid_19_by_group=[xxxx] #开启插件的群号 注意不要加""符号！！！
# covid_19_by_colour=None #设置文字转图片的颜色 如:#ffffff
# covid_19_by_size=None #设置文字转图片的大小 如:30
# covid_19_by_images=[xxxx]#开启文字转图片的群 注意不要加""符号！！！
# COMMAND_START=["/"] #配置命令起始字符

# 23.超分辨率重建(均为可选)
# 本插件仅有一个.env.dev配置项，即Huggingface的api(如果你是自建的仓库话)。默认不用管。
# RealESRGAN_API = "https://hf.space/embed/{你的id名}/{你的仓库名}/api/predict/"

# 24.明日方舟工具箱(必填)
# 百度 OCR 配置，公招识别截图用
# 具体见 https://console.bce.baidu.com/ai/?fromai=1#/ai/ocr/app/list
# arknights_baidu_api_key="xxx"    # 【必填】百度 OCR API KEY
# arknights_baidu_secret_key="xxx"   # 【必填】百度 OCR SECRET KEY
# 
# # 代理配置，如部署机器人的服务器在国内大陆地区可能需要修改
# github_raw="https://raw.githubusercontent.com"   # 默认为 https://raw.githubusercontent.com，如有镜像源可以替换，如 https://ghproxy.com/https://raw.githubusercontent.com
# github_site="https://github.com"  # 默认为 https://github.com，如有镜像源可以替换，如 https://kgithub.com
# rss_site="https://rsshub.app"  # 默认为 https://rsshub.app，如有镜像源可以替换
# 
# # 定时任务配置，默认是关闭的
# announce_push_switch=False  # 是否自动推送舟舟最新公告，默认为 False; True 为开启自动检测
# announce_push_interval=1  # 自动推送最新公告的检测间隔，上述开关开启时有效，默认为 1 分钟
# sanity_notify_switch=False  # 是否自动检测理智提醒，默认为 False; True 为开启自动检测
# sanity_notify_interval=10  # 自动检测理智提醒的检测间隔，上述开关开启时有效，默认为 10 分钟
# 
# # 资源路径配置，默认在启动机器人的目录中/运行nb run的目录中/放bot.py的目录中
# arknights_data_path = "data/arktools"                                   # 资源根路径，如果修改了根路径，下方路径都要修改
# arknights_font_path = "data/arktools/fonts"                             # 字体路径
# arknights_gamedata_path = "data/arktools/arknights/gamedata"            # 游戏数据
# arknights_gameimage_path = "data/arktools/arknights/gameimage"          # 游戏图像
# arknights_db_url = "data/arktools/databases/arknights_sqlite.sqlite3"   # 数据库
# 
# # 抽卡配置
# draw_rate_6 = 0.02  # 六星概率
# draw_rate_5 = 0.08  # 五星
# draw_rate_4 = 0.48  # 四
# draw_rate_3 = 0.42  # 三
# ...

# 25.碧蓝档案 Wiki
# BAPROXY     # 非必填 访问SchaleDB、bawiki-data的 json 数据时使用的代理

# 26.磁力搜索(均为可选)
# magnet_max_num     # 返回多少条结果, 类型int, 默认3                   例: magnet_max_num = 3
# clm_cookie         # 网站的cookie, 类型string, 自己手动从浏览器拿      例: clm_cookie = "challenge=245e59e7113b306df50012730449181e; _ga=GA1.1.795400257.1664117811; _ga_W7KV15XZN0=GS1.1.1664165687.2.1.1664165691.0.0.0"
# clm_useragent      # 网站的user-agent, 类型string, 自己手动从浏览器拿  例: clm_useragent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/105.0.0.0 Safari/537.36 Edg/105.0.1343.50"
# 注: clm_cookie和clm_useragent必须配置(虽然代码中try了一份我自己的cookie, 也许不配置也能用, 但我不能保证能用多久), 不然会搜索失败, 推荐两者配套使用; magnet_max_num可不配置, 会按照默认的3读取

# 30.天气(若使用则必填)
# apikey 必须配置 环境配置
# QWEATHER_APIKEY = xxx
# api类型 必须配置 环境配置
# 0 = 普通版(3天天气预报) 1 = 个人开发版(7天天气预报) 2 = 商业版 (7天天气预报)
# QWEATHER_APITYPE = 0

# 32.emoji 合成器(均为可选)
# 若经常下载出错，可以在 .env.xxx 文件中设置代理：
# http_proxy=http://ip:port

# 34.Epic 限免游戏资讯(均为可选)
# RESOURCES_DIR="/data/bot/resources"
# EPIC_SCHEDULER="8 8 8"
# 限免游戏资讯订阅功能默认在机器人根目录下 /data/epicfree 文件夹内生成配置文件。定义 RESOURCES_DIR 环境变量即可指定用于存放订阅配置的文件夹，填写包含 epicfree 文件夹的 父级文件夹 路径即可。如果是 Windows 系统应写成类似 D:/path/to/resources_dir 的格式。
# 限免游戏资讯订阅默认 08:08:08 发送（如果当天的游戏已经推送过则不产生推送），定义 EPIC_SCHEDULER 环境变量即可指定推送时间，该配置的三个数字依次代表 hour minute second。

# 36.随机唐可可(均为可选)
# TKK_PATH="./data/resource"  # 资源路径，可自行修改
# EASY_SIZE=10                # 简单
# NORMAL_SIZE=20              # 普通
# HARD_SIZE=40                # 困难
# EXTREME_SIZE=60             # 地狱
# MAX_SIZE=80                 # 自定义的最大尺寸，建议不要大于99

# 38.复读姬(若使用则必填)
# repeater_group = ["<群号1>", "<群号2>"]  # 支持复读的群号，群号设置为 all 可以默认所有群聊开启
# repeater_min_message_length = 1  # 触发复读的文本消息最小长度（表情和图片无此限制）
# repeater_min_message_times = 2  # 触发复读的消息次数

# 40.查看谁艾特我(均为可选)
# reminder_expire_time 合并转发消息记录的超时时间, 单位为天

# 42.智能聊天(部分若使用则必填)
# 配置名	                类型	默认	                     说明
# BAN_DATA_PATH	            str	    "./data/ban_CD"	            存放被屏蔽用户 CD 时间，删掉可提前解除屏蔽
# SETU_API	                bool	True	                    戳一戳图片默认使用的api, True 为 MirlKoi; False 为 Pixiv
# API_NUM	                int	    1	                        聊天默认使用的api, 1 为 小爱同学; 2 为 青云客; 3 为 ChatGPT
# API_CD_TIME	            int	    180	                        使用 ChatGPT 模式 1 时的对话冷却时间(秒)(防止造成频繁请求造成超时)
# BAN_CD_TIME	            int	    21600	                    当有人骂了 bot 时的屏蔽时间(秒)
# XIAOAI_APIKEY	            str	    寄	                        小爱同学的 ApiKey (申请方式看下文)
# OPENAI_API_KEY	        str	    寄	                        模式2 OpenAI 的 Apikey (申请方式看下文)
# OPENAI_MAX_TOKENS	        str	    2000	                    模式 2 时返回的最大文本字数
# BOT_NICKNAME	            str	    脑积水	                     bot 的昵称
# BOT_MASTER	            str	    (๑•小丫头片子•๑)	         bot 主人的昵称
# CHATGPT_SESSION_TOKEN	    str	    None	                    ChatGPT 的 session token (获取看下文)(如配置则优先使用)
# CHATGPT_ACCOUNT	        str	    None	                    ChatGPT 的登录邮箱(不配置则使用 session token)
# CHATGPT_PASSWORD	        str	    None	                    ChatGPT 的登录密码(不配置则使用 session token)
# CHATGPT_REFRESH_INTERVAL  int	    30	                        ChatGPT 的 session token 自动刷新时间(秒)
# CHATGPT_TIMEOUT	        int	    15	                        请求超时的时间
# CHATGPT_API	            str	    https://chat.openai.com/	API 地址，可配置反代

# 43.60s读世界(若使用则必填)
# read_qq_friends=[12345678910] #设定要发送的QQ好友
# read_qq_groups=[123456789,123456789,123456789] #设定要发送的群
# read_inform_time=[{"HOUR":9,"MINUTE":1}] #在输入时间的时候 不要 以0开头如{"HOUR":06,"MINUTE":08}是错误的

# 44.历史上的今天(若使用则必填)
# history_qq_friends=[123456789,123456789] #设定要发送的QQ好友
# history_qq_groups=[123456789,123456789,123456789] #设定要发送的群
# history_inform_time="7 35" #设定每天发送时间，以空格间隔

# 45.游戏抽卡(均为可选)
# 1.是否需要变更资源路径嘛？（默认路径 data/draw_card/）
#   如果需要变更路径，在.env文件中添加DRAW_PATH绝对路径【注：如果你的项目开启了debug冷重载，建议更换路径！】
#   示例：
# DRAW_PATH = "D:/xxx/data/draw_card/"
# 2.是否需要关闭某些抽卡呢？（即不下载资源不使用对应抽卡命令）
#   如果需要关闭某些卡池，在.env文件中添加对应的卡池FLAG并设置为False
#   # 不添加或不设置默认为True
# PRTS_FLAG = False       # 明日方舟
# GENSHIN_FLAG = False    # 原神
# PRETTY_FLAG = False     # 赛马娘
# GUARDIAN_FLAG = False   # 坎公骑冠剑
# PCR_FLAG = False        # 公主连结
# AZUR_FLAG = False       # 碧蓝航线
# FGO_FLAG = False        # 命运-冠位指定（FGO）
# ONMYOJI_FLAG = False    # 阴阳师
# BA_FLAG = False         # 碧蓝档案
# 3.是否需要更改一些其他配置呢？（不添加或不设置默认为 False）
#   在.env文件中添加对应 属性，以下为默认值
# PCR_TAI = True          # 公主连结使用台服卡池（即添加国服未时装角色）删除原pcr.json文件再重启bot自动更新即可
# SEMAPHORE = 5           # 限制并发数量(主要是 碧蓝航线 和 FGO 数据)

# 47.以图搜图(均为可选)
# hikarisearch_api=xxx  # HikariSearch 站点，默认为 "https://hikari.obfs.dev"
# hikarisearch_max_results=xxx  # 最多返回的结果数量，默认为 3
# hikarisearch_withdraw=xxx  # 自动撤回时间，默认为 0 (不撤回)，单位为秒

# 52.通用订阅推送(均为可选)
# BISON_CONFIG_PATH: 插件存放配置文件的位置，如果不设定默认为项目目录下的data目录
# BISON_USE_PIC: 将文字渲染成图片后进行发送，多用于规避风控
# BISON_BROWSER: 本插件使用 Chrome 来渲染图片
# 如果不进行配置，那么会在启动时候自动进行安装，在官方的 docker 镜像中已经安装了浏览器
# 使用本地安装的 Chrome，设置为local:<chrome path>，例如local:/usr/bin/google-chrome-stable
# 使用 cdp 连接相关服务，设置为wsc://xxxxxxxxx
# 使用 browserless 提供的 Chrome 管理服务，设置为ws://xxxxxxxx，值为 Chrome Endpoint
# WARNING
# 截止发布时，本项目尚不能完全与 browserless 兼容，目前建议使用镜像内自带的浏览器，即 不要配置这个变量
# BISON_SKIP_BROWSER_CHECK: 是否在启动时自动下载浏览器，如果选择False会在用到浏览器时自动下载， 默认True
# BISON_OUTER_URL: 从外部访问服务器的地址，默认为http://localhost:8080/bison/，如果你的插件部署 在服务器上，建议配置为http://<你的服务器ip>:8080/bison/
# WARNING
# 如果需要从外网或者 Docker 容器外访问后台页面，请确保HOST=0.0.0.0
# BISON_FILTER_LOG: 是否过滤来自nonebot的 warning 级以下的 log，如果你的 bot 只运行了这个插件可以考虑 开启，默认关
# BISON_USE_QUEUE: 是否用队列的方式发送消息，降低发送频率，默认开
# BISON_RESEND_TIMES: 最大重发次数，默认 0
# BISON_USE_PIC_MERGE: 是否启用多图片时合并转发（仅限群）
# 0: 不启用(默认)
# 1: 首条消息单独发送，剩余图片合并转发
# 2: 所有消息全部合并转发
# BISON_USE_PIC_MERGE 配置项示例
# WARNING
# 启用此功能时，可能会因为待推送图片过大/过多而导致文字消息与合并转发图片消息推送间隔过大(选择模式1时)，请谨慎考虑开启。或者选择模式2，使图文消息一同合并转发(可能会使消息推送延迟过长)
# BISON_PROXY: 使用的代理连接，形如http://<ip>:<port>（可选）
# BISON_UA: 使用的 User-Agent，默认为 Chrome

# 56.番剧资源搜索(均为可选)
# CARTOON_PROXY=                        # 设置代理端口
# CARTOON_FORWARD=false                 # 合并转发的形式发送消息
# CARTOON_LENGTH=3                      # 每次发送的数量，用-1表示全部取出
# CARTOON_FORMANT="{title}\n{magnet}"   # 发送的消息格式化
# CARTOON_ONESKIP=true                  # 当只有一个选项时跳过

# 57.战地1、5战绩查询(均为可选)
# bfchat_prefix = "/"    # bfchat的命令前缀，默认为"/"
# bfchat_dir = "./bfchat_data"    # bfchat的存储目录，用于存储群绑定玩家数据

# 58.战舰世界水表查询(若使用则必填)
# API_TOKEN = 123456:qwertyuiopasdfghjl  #请加群发送.token help获取api_key和token Q群:967546463，直接用邮件中的token替换前面这串字符串就行了，没有引号
# SUPERUSERS=["1119809439"]       #替换为你自己的QQ号，确认与BOT是好友
# USE_PLUGIN_GO_CQHTTP = true     #使用内嵌go-cqhttp插件，如果一直连不上请将此项值改为false，并按教程下载go-cqhttp
# GOCQ_WEBUI_USERNAME=admin       #如果上一项设置为true，请将此处的账号修改为自定义，不配置账号和密码请删除这两项
# GOCQ_WEBUI_PASSWORD=admin       #如果上一项设置为true，请将此处的密码修改为自定义，不配置账号和密码请删除这两项
# private = false                 #开启私聊
# group = true                    #开启群聊
# channel = false                 #开启频道
# all_channel = false             #是否全频道生效，无论此项配置如何，channel_list中的频道一定会开启
# channel_list = []               #频道列表白名单，数组形式，可在控制台中获取相应的channel_id
# ban_group_list = [967546463]    #群列表黑名单，默认屏蔽了开发者交流群
# pupu = true                     #是否开启噗噗
# check_cache = true              #是否开启缓存上报,可降低高峰期延迟,如果错误日志中频繁报错上报url:XXXXXXXX,请关闭此项或配置代理
# proxy_on = false                #是否启用代理
# proxy = http://localhost:7890   #代理地址，如果上面选项开启，这边替换为你本地的
# ocr_on = true                   #是否开启ocr(识图指令)
# ocr_offline = false             #是否只使用hash验证，即设置为true后只能识别服务器已记录的图片，如果群较多(>300)导致响应延迟较高可以开启
# ocr_url = http://mc.youthnp.cn:23338/OCR/           #默认ocr地址，一般不用动

# 59.词云(均为可选)
# wordcloud_width
# 类型: int
# 默认: 1920
# 说明: 生成图片的宽度
# wordcloud_height
# 类型: int
# 默认: 1200
# 说明: 生成图片的高度
# wordcloud_background_color
# 类型: str
# 默认: black
# 说明: 生成图片的背景颜色
# wordcloud_colormap
# 类型: str
# 默认: viridis
# 说明: 生成图片的字体 色彩映射表
# wordcloud_font_path
# 类型: str
# 默认: 自带的字体（思源黑体）
# 说明: 生成图片的字体文件位置
# wordcloud_stopwords_path
# 类型: str
# 默认: None
# 说明: 结巴分词的 停用词表 位置
# wordcloud_userdict_path
# 类型: str
# 默认: None
# 说明: 结巴分词的 自定义词典 位置
# wordcloud_timezone
# 类型: str
# 默认: None
# 说明: 用户自定义的 时区，留空则使用系统时区
# wordcloud_default_schedule_time
# 类型: str
# 默认: 22:00
# 说明: 默认定时发送时间，当开启词云每日定时发送时没有提供具体时间，将会在这个时间发送每日词云

# 65.记事本(均为可选)
# 笔记文字颜色（不填则默认配置）
# NOTE_FONT_COLOR=[149,98,49]
# 笔记背景颜色（不填则默认配置）
# NOTE_BG_COLOR=[255,245,151]
# 回复形式（可选'image'/'text'，默认'text'）
# note_type='image'
# 重启提示（可选true/false，默认false）
# note_restart_notice=true

# 66.ChatGPT(OpenAI)对话(使用token)(若使用则必填)
# 配置项	                必填 默认值	     说明
# CHATGPT_SESSION_TOKEN	    否	空字符串	 ChatGPT 的 session_token，如配置则优先使用
# CHATGPT_ACCOUNT	        否	空字符串	 ChatGPT 登陆邮箱，未配置则使用 session_token
# CHATGPT_PASSWORD	        否	空字符串	 ChatGPT 登陆密码，未配置则使用 session_token
# CHATGPT_CD_TIME	        否	60	        冷却时间，单位：秒
# CHATGPT_PROXIES	        否	None	    代理地址，格式为： http://ip:port
# CHATGPT_REFRESH_INTERVAL	否	30	        session_token 自动刷新间隔，单位：分钟
# CHATGPT_COMMAND	        否	空字符串	 触发聊天的命令，可以是 字符串 或者 字符串列表。如果为空字符串或者空列表，则默认响应全部消息
# CHATGPT_TO_ME	            否	True	    是否需要@机器人
# CHATGPT_TIMEOUT	        否	30	        请求服务器的超时时间，单位：秒
# CHATGPT_API	            否	https://chat.openai.com/	API 地址，可配置反代
# CHATGPT_IMAGE	            否	False	    是否以图片形式发送。如果无法显示文字，请点击此处查看解决办法
# CHATGPT_IMAGE_WIDTH	    否	500	        消息图片宽度，单位：像素
# CHATGPT_PRIORITY	        否	999	        事件响应器优先级
# CHATGPT_BLOCK	            否	True	    是否阻断消息传播
# CHATGPT_PRIVATE	        否	True	    是否允许私聊使用
# CHATGPT_SCOPE	            否	private	    设置公共会话或私有会话。private：私有会话，群内成员会话各自独立。public：公共对话，群内成员共用同一会话
# CHATGPT_DATA	            否	            插件目录下	插件数据保存目录的路径
# CHATGPT_MAX_ROLLBACK	    否	5	        设置最多支持回滚多少会话

# 70.Apex查询(若使用则必填)
# APEX_API_KEY

# 71.ChatGPT(OpenAI)对话(使用多api)(若使用则必填)
# 对于官方openai接口只需配置API Keys即可，所以请填写API在您配置的chatgpt_token_path下面，默认路径是config/chatgpt_api_key.yml
# 文件内格式如下，有多个Key请按照如下格式配置。
# api_keys: [
# 	XXX,
# 	YYY
# ]
# 之后是一些自定义配置，根据注释可以自行修改，如果需要配置请在env.dev下进行配置。
# gpt3_api_key_path = "config/chatgpt_api_key.yml"   # api文件的路径
# gpt3_command_prefix = "."                          # 基本会话中的指令前缀
# gpt3_need_at = False                               # 是否需要@才触发命令
# gpt3_image_render = True                           # 是否渲染为图片
# gpt3_image_limit = 100                             # 长度超过多少才会渲染成图片
# gpt3_max_tokens = 400                              # 最大返回值长度

# 76.文字表情包制作(均为可选)
# memes_command_start
# 类型：List[str]
# 默认：[""]
# 说明：命令起始标记，默认包含空字符串
# memes_resource_url
# 类型：str
# 默认：https://ghproxy.com/https://raw.githubusercontent.com/noneplugin/nonebot-plugin-memes/v0.3.x/resources
# 说明：资源下载链接，默认为使用ghproxy代理的github仓库链接
# memes_disabled_list
# 类型：List[str]
# 默认：[]
# 说明：禁用的表情包列表，需填写表情名称的列表，表情名称可以在data_source.py文件中查看。若只是临时关闭，可以用下文中的“表情包开关”

# 78.AI画图(使用本地SDWebUI)(若使用则必填)
# NOVELAI_MODE（将在 0.6.0 版本废弃）
# 类型: "novelai"|"naifu"|"sd"
# 默认值: "novelai"
# 运行模式。分别对应三种不同的后端。使用 novelai 时，你必须配置 NOVELAI_TOKEN 才能正常运行
# 如果你要使用 sd 作为后端，请确保 webui-user.bat 文件设置了set COMMANDLINE_ARGS=--api
# #NOVELAI_SITE（将在 0.6.0 版本废弃）
# 类型：string
# 当插件运行在naifu或sd模式时需要使用该设置 它对应着你的服务器地址，格式为 "IP:端口号" ，如果你使用 sd 的公网地址，格式为 "一串字母数字.gradio.app"
# 如果该设置留空，则会根据运行模式，使用对应模式默认的地址，naifu 对应127.0.0.1:6969，sd 对应127.0.0.1:7860
# #NOVELAI_TOKEN（将在 0.6.0 版本废弃）
# 类型: string
# 当插件运行在novelai模式时必填 这是 novelai 的授权令牌，一长串字母。有了这个令牌插件就可以在不需要你账号密码的情况下访问 novelai。换而言之，这是一个和你账号密码同等重要的东西，请不要把它告诉他人。
# 获取方式如下：
# 通过代码获取：
# 在网页中登录你的 NovelAI 账号
# 打开控制台 (F12)，并切换到控制台 (Console) 标签页
# 输入下面的代码并按下回车运行
# console.log(JSON.parse(localStorage.session).auth_token);
# 你会看到如下的输出，这部分就是你的 token console
# 通过抓包获取:
# 在网页中登录你的 NovelAI 账号
# 打开控制台 (F12)，并切换到网络 (Network) 标签页
# 随便生成一个什么东西，你会看到左侧多了两个 generate-image 的请求，点击下面那个，右侧会弹出它的信息
# 在标头 (Header) 一栏中寻找 authorization 一项，你会看到类似以 Bearer 开头的一长串字符
# 在 Bearer 后面的一长串就是你的 token，如果没有就在另一个请求里找 catch
# #NOVELAI（将在 0.6.0 版本引入）
# 类型： dict
# 必填 这是一个包含着你所有后端数据的字典，它的完整示例格式如下：
# {
#   //最简配置方式
#   "novelai": "token", // 加入一个novelai后端，并起名为novelai
#   "novelai-standby": "token", //加入一个novelai后端，并起名为standby
#   "naifu": "", //加入一个naifu后端，使用默认地址，并起名为naifu
#   "sd-single": "", //加入一个sd后端，使用默认地址，使用默认模型，并起名为single
#   //高级配置方式，包含sd的模型指定和隐藏模型，可以和上方配置混用
#   "sd": [
#     "", //加入一个sd后端，使用默认地址
#     {
#       "": "", //使用默认模型，并起名为sd
#       "nahita": "nahita", //使用nahita模型，并起名为nahita
#       "/刑": "blue_archive" //使用blue_archive模型，起名为"刑"，并将该模型设置为仅能手动指定调用
#     }
#   ],
#   "/naifu": "127.0.0.1:6970", //加入一个naifu后端，使用指定地址，并起名为naifu，由于与上方重名，会自动更名为naifu_1，并将该模型设置为仅能手动指定调用
#   "sd-2": ["xxxxx.gradio.app", { "final": "final-prune" }] //使用final_prune模型，并起名为2_final
# }
# 当然一般情况下，你并不需要写那么多东西，你只需要写:
# { "novelai": "token" }
# 这样就完成了配置 novelai 的过程
# 如果你希望在保持队列限制的情况下，让某个后端同时进行两个工作，你可以加入两个不同名字的后端，而它们指向同一个地址。
# 如果你希望
# 如果你开启了队列限制，除非手动指定调用，否则运行时按照从上至下依次调用，当所有后端都在忙时将会进入等待。
# 如果你关闭了队列限制，则默认会将所有工作塞给位置第一个的后端，除非用户手动指定。
# #后台设置
# 这部分参数决定了 bot 的运行行为，大部分情况下保持默认即可，也可以根据自己的需求进行调整
# #NOVELAI_SAVE
# 类型: int
# 默认值: 1
# 0: 禁用本地保存
# 1: 启动本地保存
# 2: 启动本地保存,并保存追踪文件 用于设置文件保存的选项,文件将会保存至"你的 Bot 文件夹/data/novelai/output/群号",并以图片的 md5 值命名
# 由于插件采用了占用空间更小的 jpg 格式保存文件，无法保留原图片(png)的 chunk 信息，所以将追踪信息以同名 txt 保存。追踪文件将请求的用户、群号、关键词等内容保存下来，方便追踪图片的来源和信息。下面是一份完整的追踪文件内容：
# time=2022-11-20 15:20:41
# user_id=123456789
# group_id=123456789
# cost=0
# count=3
# seed=[444314745]
# tags= masterpiece
# ntags=
# scale=11
# strength=0.7
# noise=0.2
# samper=k_euler_ancestral
# model=safe-diffusion
# steps=28
# width=512
# height=768
# img2img=False
# #NOVELAI_PAID
# 类型: int
# 默认值: 0
# 0: 禁用付费模式
# 1: 模拟点数模式
# 2: 严格点数模式
# 3: 无限制模式
# 该选项用于精准控制如果限制用户花费点数的行为。除了无限制模式，均会对用户以图生图、生成大图、高于 28 步等官网需要付费的行为进行限制。
# 禁用付费模式下以图生图的行为会被拒绝，而其他操作会通过一些处理被插件自动处理为符合官网免费规则的范围，例如降低分辨率或者将步数重置为默认值
# 模拟点数模式和严格点数模式会按照 novelai 官网的点数计算方法，用户需要消耗点数来进行官网需要付费的行为。具体见点数模式一章。不同的是，严格点数模式下免费行为也会进行点数计算.
# #NOVELAI_PURE
# 类型: bool
# 默认值: False
# 该选项决定了是否开启简洁返回模式，当该选项开启时，插件将只会返回图片，而不会返回其他数据。当该选项关闭时，插件会将安全的追踪信息一并打包为转发消息。
# 当你的 bot 因为风控等原因无法发送转发消息或者长消息时，可以尝试开启该选项
# #NOVELAI_LIMIT
# 类型: bool
# 默认值: True
# 该选项决定了是否开启全局队列限速。当该选项开启时，请求会按照先进先出的算法，保障服务器仅会同时处理一个请求。对于自己的服务器来说，这可以有效防止同时进行多个生成而暴毙。对于 novelai 来说，可能更多的是玄学上的安慰，因为目前并没有证据证明 novelai 会因为并发请求而封号。
# #NOVELAI_DAYLIMIT
# 类型: int
# 默认值: 0 (关闭功能)
# 该值确定了每个人每天最多生成多少张图，当该值为 0 时，不会对每个人每天的请求次数进行限制。
# #NOVELAI_H
# 类型: bool
# 默认值: False
# 该选项确定了插件是否允许 r18。当该选项开启后，r18 屏蔽词将会失效。如果你使用的是 novelai，该选项还会将模型自动切换至 r18 模型。
# 注意
# 开启该选项后，bot 可能会发出 r18 限制的图，这可能会导致你的 bot 被风控甚至封号。开启该选项表示你已经知道了可能会导致这种后果。
# #NOVELAI_ANTIREPORT
# 类型: bool
# 默认值: True
# 该选项决定了合并消息中的发送者显示的是谁。该选项开启时，发送者将会显示为发出绘图指令的用户。该选项关闭时，发送者将会显示为 bot。该选项可能对反举报具有一些玄学上的效果。
# #NOVELAI_MAX
# 类型: int
# 默认值: 3
# 该值确定了每次用户能够指定的最大同时生成数量。即便插件无论何时都会一张一张生成，但是如果用户设置的生成数量过大，会导致插件堵塞。
# #NOVELAI_SIZE
# 类型: int
# 默认值: 1024
# 该值确定了允许生成的图片最大分辨率，对应的像素数量为该值的平方。用户的分辨率请求都会被等比例降低至小于限制的像素数为止。在禁用付费模式下，则会以该值和 640 中较小的值为标准。
# 如果你的服务器比较寄，无法承受大图的生成，建议改成 640 或者其他自己测试能够承受的值。
# 注意
# naifu 和 novelai 后台不会接受长宽大于 1024 的值，插件会自动通过等比降低的方式，将长宽限制在 1024 以内。sd 则限制在 2048 以内。如果你的 sd 是经过魔改的，支持更大的长宽值，那么请自行修改代码 "/backend/sd.py" 第 9 行 的 max_resolution 值
# #预设配置
# 这部分参数允许管理员、群主使用管理指令对每个群进行针对性设置。写在配置文件中的值是在没有经过管理指令设置的群中所使用的默认值。
# #NOVELAI_TAGS
# 类型: str
# 该值是所有请求中默认添加的基础词条，会添加在内置的优化词条之后，用户的词条之前。如果用户使用了-o 指令，那么基础词条和内置优化词条将被忽略
# #NOVELAI_NTAGS
# 类型: str
# 该值是所有请求中默认添加的基础排除词条，会添加在用户的词条之前。如果用户使用了-o 指令，那么基础排除词条将被忽略
# #NOVELAI_CD
# 类型: int
# 默认值: 60
# 该值限制了单个用户两次指令之间的间隔时间（单位秒）。当该值设置为 0 时，用户将不会被 CD 限制（实际上当该值比较小时，也基本是如此）
# #NOVELAI_ON
# 类型: bool
# 默认值: True
# 该选项决定了插件是否默认全局开启，结合管理指令可以做到群黑白名单的效果
# #NOVELAI_REVOKE
# 类型: int
# 默认值: 0
# 该值为插件自动撤回的时间（单位秒）。当该值为 0 时，插件不会自动撤回。如果你担心被举报可以设置一个值。
# #翻译 API 配置
# 这部分设置用于翻译 API，获取 API 的方法请自行百度。即便你不配置下面的值，插件也有内置的谷歌翻译和有道翻译可以使用，但是下面几种 API 相比于前者具有显然更高的翻译质量。
# #BING_KEY
# 类型: string
# 这是 BING 翻译需要使用的 KEY，请确保你在申请 API 时，实例范围选择的是全球。
# #DEEPL_KEY
# 类型: string
# 这是 DeepL 翻译需要使用的 KEY。DeepL 拥有最好的翻译质量，但是并不对国内用户开放，如果你有条件我建议搞一个。

# 80.整点报时(均为可选)
# start_time = 8
# end_time = 20

# 85.反闪照(均为可选)
# ANTI_FLASH_ON=true                          # 全局开关
# ANTI_FLASH_GROUP=["123456789", "987654321"] # 默认开启的群聊，但可通过指令开关
# ANTI_FLASH_PATH="your-path-to-config.json"  # 配置文件路径，默认同插件代码路径

# 86.leetcode每日一题
# LEETCODE_QQ_FRIENDS=[123456789]
# LEETCODE_QQ_GROUPS=[987654231]
# LEETCODE_INFORM_TIME=[{"HOUR":20,"MINUTE":1},{"HOUR":20,"MINUTE":10},{"HOUR":0,"MINUTE":1}]

# 88.反向词典
# wantwords_max_results=10 # 最大输出结果数，为[1,100]整数，默认为10。

# 89.简易群管
# admin_mode # 1 为调用 API，BOT 不需要为群主；2 为使用 Nonebot 框架，BOT 必须为群主
# skey
# pskey

# 91.BingGPT
# bingchat_command_chat          #对话命令
# bingchat_command_new_chat      #新建对话命令
# bingchat_command_history_chat  #返回历史对话命令

# 92.Pixiv
# 一共有四个配置项目
# IMGROOT=/root/
# AIOHTTP=http://127.0.0.1:1081
# FFMPEG=/usr/bin/ffmpeg
# PIXIV_COOKIES=xxx
# PIXIV_R18=True
# BAN_PIXIV_R18=[]
# 分别是:
# 1.保存图片的根目录
# 2.http代理地址
# 3.ffmpeg地址(不配置这个不支持动图)
# 4.你的p站的cookies (不配置不支持R18)
# 5.是否支持R18 （默认支持）
# 6.如果PIXIV_R18为True的情况下，设置黑名单（群号）
# PS： R18支持两种配置方式
# PIXIV_R18=True # 为所有群启用R18
# PIXIV_R18=False # 不启用R18
# PIXIV_R18=["123", "456"] #只为群123 和 群456启用r18

# 93.舔狗日记
# dog_cd    调用''舔狗日记'cd默认值
# laugh_cd    调用''讲个笑话''cd的默认值
# hitokoto_cd    调用"一言"cd的默认值
# wenan_cd    调用“文案”cd的默认值

# 94.B站热搜
# b23_commands={'b23', 'B站热搜'}    命令名
# b23_block=False    是否阻止向下传播
# b23_priority=99    优先级